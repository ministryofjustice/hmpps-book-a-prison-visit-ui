/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/register/auth': {
    /**
     * Authenticate one login details against pre populated bookers
     * @description Authenticate one login details against pre populated bookers and return BookerReference object to be used for all other api calls for booker information
     */
    put: operations['bookerAuthorisation']
  }
  '/public/booker/{bookerReference}/prisoners': {
    /**
     * Get prisoners associated with a booker.
     * @description Get prisoners associated with a booker.
     */
    get: operations['getPrisonersForBooker']
  }
  '/public/booker/{bookerReference}/prisoners/{prisonerNumber}/visitors': {
    /**
     * Get visitors for a prisoner associated with that booker.
     * @description Get visitors for a prisoner associated with that booker.
     */
    get: operations['getVisitorsForPrisoner']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    ErrorResponseDto: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    /** @description Auth detail Dto */
    AuthDetailDto: {
      /** @description auth reference/sub */
      oneLoginSub: string
      /** @description auth email */
      email: string
      /** @description auth phone number */
      phoneNumber?: string
    }
    /** @description Booker reference Object, to be used with all other api call for booker information */
    BookerReference: {
      /** @description This value is the booker reference and should be used to acquire booker information */
      value: string
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      /** Format: int32 */
      errorCode?: number
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    PrisonerBasicInfoDto: {
      /**
       * @description Prisoner Number
       * @example A1234AA
       */
      prisonerNumber: string
      /**
       * @description First Name
       * @example Robert
       */
      firstName: string
      /**
       * @description Last name
       * @example Larsen
       */
      lastName: string
    }
    /** @description A contact for a prisoner */
    VisitorBasicInfoDto: {
      /**
       * Format: int64
       * @description Identifier for this contact (Person in NOMIS)
       * @example 5871791
       */
      personId: number
      /**
       * @description First name
       * @example John
       */
      firstName: string
      /**
       * @description Middle name
       * @example John
       */
      middleName?: string
      /**
       * @description Last name
       * @example Smith
       */
      lastName: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Authenticate one login details against pre populated bookers
   * @description Authenticate one login details against pre populated bookers and return BookerReference object to be used for all other api calls for booker information
   */
  bookerAuthorisation: {
    requestBody: {
      content: {
        'application/json': components['schemas']['AuthDetailDto']
      }
    }
    responses: {
      /** @description One login details matched with pre populated booker */
      200: {
        content: {
          'application/json': components['schemas']['BookerReference']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
      /** @description Incorrect permissions for this action */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponseDto']
        }
      }
    }
  }
  /**
   * Get prisoners associated with a booker.
   * @description Get prisoners associated with a booker.
   */
  getPrisonersForBooker: {
    parameters: {
      path: {
        /**
         * @description Booker's unique reference.
         * @example A12345DC
         */
        bookerReference: string
      }
    }
    responses: {
      /** @description Returned prisoners associated with a booker */
      200: {
        content: {
          '*/*': components['schemas']['PrisonerBasicInfoDto'][]
        }
      }
      /** @description Incorrect request to get prisoners associated with a booker */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get prisoners associated with a booker */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  /**
   * Get visitors for a prisoner associated with that booker.
   * @description Get visitors for a prisoner associated with that booker.
   */
  getVisitorsForPrisoner: {
    parameters: {
      path: {
        bookerReference: string
        /**
         * @description Prisoner Number for whom visitors need to be returned.
         * @example A12345DC
         */
        prisonerNumber: string
      }
    }
    responses: {
      /** @description Returned visitors for a prisoner associated with that booker */
      200: {
        content: {
          '*/*': components['schemas']['VisitorBasicInfoDto'][]
        }
      }
      /** @description Incorrect request to get visitors for a prisoner associated with that booker */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorized to access this endpoint */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Incorrect permissions to get visitors for a prisoner associated with that booker */
      403: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
